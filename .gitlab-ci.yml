stages:
  - containerization
  - deployment

variables:
  APPLICATION_NAME: whereabouts-front
  DOCKER_IMAGE: ${DOCKER_HUB_USERNAME}/${APPLICATION_NAME}

containerization:
  stage: containerization
  script:
    # Docker hub login
    - echo "${DOCKER_HUB_PASSWORD}" | docker login --username ${DOCKER_HUB_USERNAME} --password-stdin
    # Buikd and push container image
    - docker build -t ${DOCKER_IMAGE} .
    - docker push ${DOCKER_IMAGE}
    # Cleanup
    - docker image rm ${DOCKER_IMAGE}

deployment:
  stage: deployment
  script:
    # create/update the deployment
    - envsubst < kubernetes/deployment.yml | kubectl apply -f -
    # Pull latest image by restarting the deployment
    - kubectl rollout restart deployment/${APPLICATION_NAME}
    # Create / update the service
    - envsubst < kubernetes/service.yml | kubectl apply -f -
    # if a domain name is specified, serve app through an ingress
    - >
      if [ -z ${CERTIFICATE_DOMAIN} ];
      then echo "CERTIFICATE_DOMAIN not set, skipping creation of ingress";
      else envsubst < kubernetes/ingress.yml | kubectl apply -f -;
      fi
  environment:
    name: production
    kubernetes:
      # Obtained from GitLab
      namespace: ${KUBERNETES_NAMESPACE}
